openapi: "3.0.3"
info:
  title: "kokline API"
  description: "kokline API"
  version: "1.0.0"
servers:
- url: "https://kokline"
paths:
  /api/v1/auth/logout:
    post:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/users:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /health:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
  /notifier/listen:
    get:
      description: ""
      parameters:
      - name: "x-user-id"
        in: "header"
        required: false
        schema:
          type: "number"
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
components:
  schemas:
    UserCreateRequest:
      type: "object"
      properties:
        nickname:
          type: "string"
        credits:
          type: "string"
        name:
          type: "string"
        avatarUrl:
          type: "string"
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        nickname:
          type: "string"
        name:
          type: "string"
        avatarUrl:
          type: "string"
        chats:
          type: "array"
          items:
            type: "integer"
            format: "int64"
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"