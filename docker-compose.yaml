version: '3.8'

networks:
  service-network:
    driver: bridge
  database-network:
    driver: bridge
  kafka-network:
    driver: bridge

services:
  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    container_name: backend
    restart: on-failure
    environment:
      POSTGRES_URL: jdbc:postgresql://localhost:5432/kokline
    ports:
      - 8080:8080
    networks:
      - service-network
      - database-network
      - kafka-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: kokline
      POSTGRES_PASSWORD: 123
    ports:
      - 5433:5432
    networks:
      - database-network
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: infrastructure-zookeeper
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: infrastructure-kafka
    restart: on-failure
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT, INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:10092, INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
    expose:
      - 10092
      - 29092
    ports:
      - 10092:10092
    networks:
      - kafka-network
    depends_on:
      zookeeper:
        condition: service_started

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    container_name: infrastructure-schema-registry
    restart: on-failure
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    expose:
      - 8081
    ports:
      - 10001:8081
    networks:
      - kafka-network
    depends_on:
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started

