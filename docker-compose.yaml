version: '3.8'

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

services:
  backend:
    build: ./backend
    container_name: backend
    restart: on-failure
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/kokline
      REDIS_DNS_NAME: redis
      ALLOWED_HOSTS.0: host.docker.internal:5173
      ALLOWED_HOSTS.1: host.docker.internal:4173
    ports:
      - 8080:8080
    networks:
      - frontend-network
      - backend-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: kokline
      POSTGRES_PASSWORD: 123
    ports:
      - 5433:5432
    networks:
      - backend-network
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis/redis-stack:7.2.0-v3
    container_name: redis
    restart: on-failure
    ports:
      - 6379:6379
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 10
